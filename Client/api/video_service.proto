syntax = "proto3";
package client;

option go_package = "../dto";

import "entity.proto";

message feed_req {
  int64 latest_time = 1; // 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
  string token = 2; // 可选参数，登录用户设置
}

message feed_resp {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  entity.VideoInfo video_list = 3; // 视频列表
  int64 next_time = 4; // 本次返回的视频中，发布最早的时间，作为下次请求时的latest_time
}

message UserInfo {
  int64 id = 1; // 用户id
  string name = 2; // 用户名称
  int64 follow_count = 3; // 关注总数
  int64 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
  string avatar = 6; //用户头像
  string background_image = 7; //用户个人页顶部大图
  string signature = 8; //个人简介
  int64 total_favorited = 9; //获赞数量
  int64 work_count = 10; //作品数量
  int64 favorite_count = 11; //点赞数量
}
message publish_video_req {
  string token = 1; // 用户鉴权token
  bytes data = 2; // 视频数据
  string title = 3; // 视频标题
}
message publish_video_resp {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
}

message get_publish_list_req {
  int64 user_id = 1; // 用户id
  string token = 2; // 用户鉴权token
}

message get_publish_list_resp {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  entity.VideoInfo video_list = 3; // 用户发布的视频列表
}


service VideoService {
  rpc GetFeed (feed_req) returns (feed_resp);
  rpc PublishVideo (publish_video_req) returns (publish_video_resp);
  rpc GetPublishList (get_publish_list_req) returns (get_publish_list_resp);
}

