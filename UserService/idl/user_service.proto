syntax = "proto3";

package client;

import "api.proto";
import "entity.proto";

option go_package = "dto";

message user_register_req {
    string username = 1[(api.body)="body"]; // 注册用户名，最长32个字符
    string password = 2[(api.body)="body"]; // 密码，最长32个字符
}

message user_register_resp {
    int32 status_code = 1; // 状态码，0-成功，其他值-失败
    optional string status_msg = 2; // 返回状态描述
    int64 user_id = 3; // 用户id
    string token = 4; // 用户鉴权token
}

message user_login_req {
    string username = 1[(api.body)="body"]; // 登录用户名
    string password = 2[(api.body)="body"]; // 登录密码
}

message user_login_resp {
    int32 status_code = 1; // 状态码，0-成功，其他值-失败
    string status_msg = 2; // 返回状态描述
    int64 user_id = 3; // 用户id
    string token = 4; // 用户鉴权token
}

message user_info_req {
    int64 user_id = 1[(api.body)="body"]; // 用户id
    string token = 2[(api.body)="body"]; // 用户鉴权token
}

message user_info_resp {
    int32 status_code = 1; // 状态码，0-成功，其他值-失败
    string status_msg = 2; // 返回状态描述
    entity.UserInfo user = 3; // 用户信息
}



service UserService {
    rpc Register(user_register_req) returns (user_register_resp) {
        option (api.post)="/internal/user/register";
    }
    rpc Login(user_login_req) returns (user_login_resp) {
        option (api.post)="/internal/user/login";
    }
    rpc UserInfo(user_info_req) returns (user_info_resp) {
        option (api.post)="/internal/user/info";
    }
}

